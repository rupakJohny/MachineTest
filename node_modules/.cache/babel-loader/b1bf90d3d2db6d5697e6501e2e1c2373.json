{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\MachineTest\\\\src\\\\components\\\\routes.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Auth from './Auth';\nimport Homepage from './Homepage';\nimport { useSelector } from \"react-redux\";\nimport Detailspage from './Detailspage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routing = () => {\n  _s();\n\n  const isAuth = useSelector(state => state.auth.isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      isAuth: isAuth,\n      element: /*#__PURE__*/_jsxDEV(Auth, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Homepage\",\n      isAuth: isAuth,\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Detailspage\",\n      isAuth: isAuth,\n      element: /*#__PURE__*/_jsxDEV(Detailspage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n/*const ProtectiveRoute = ({ isAuth, component: Component, ...rest }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => isAuth ? (<Homepage />) : (navigate('/Auth')\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\nconst ProtectiveLogin = ({ isAuth, component: Component, ...rest }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => isAuth ? (<Homepage />) : (navigate('/Auth')\r\n            )\r\n            }\r\n        />\r\n    )\r\n}*/\n\n\n_s(Routing, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c = Routing;\nexport default Routing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["E:/React/MachineTest/src/components/routes.js"],"names":["Routes","Route","useNavigate","Auth","Homepage","useSelector","Detailspage","Routing","isAuth","state","auth","isAuthenticated"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,eAArB,CAA1B;AACA,sBACI,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAgC,MAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,MAAM,EAAEA,MAAhC;AAAwC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,cAAZ;AAA2B,MAAA,MAAM,EAAEA,MAAnC;AAA2C,MAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAApD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAhCMD,O;UACaF,W;;;KADbE,O;AAkCN,eAAeA,OAAf","sourcesContent":["import { Routes, Route, useNavigate } from 'react-router-dom';\r\nimport Auth from './Auth'\r\nimport Homepage from './Homepage'\r\nimport { useSelector } from \"react-redux\";\r\nimport Detailspage from './Detailspage';\r\n\r\nconst Routing = () => {\r\n    const isAuth = useSelector(state => state.auth.isAuthenticated);\r\n    return (\r\n        <Routes>\r\n            <Route path='/' isAuth={isAuth} element={<Auth />} />\r\n            <Route path='/Homepage' isAuth={isAuth} element={<Homepage />} />\r\n            <Route path='/Detailspage' isAuth={isAuth} element={<Detailspage />} />\r\n        </Routes>\r\n    )\r\n}\r\n\r\n/*const ProtectiveRoute = ({ isAuth, component: Component, ...rest }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => isAuth ? (<Homepage />) : (navigate('/Auth')\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\nconst ProtectiveLogin = ({ isAuth, component: Component, ...rest }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={() => isAuth ? (<Homepage />) : (navigate('/Auth')\r\n            )\r\n            }\r\n        />\r\n    )\r\n}*/\r\n\r\nexport default Routing"]},"metadata":{},"sourceType":"module"}